version: '2.1'

services:

  postgres:
    image: postgres:alpine
    container_name: postgres
    build: ./postgres
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=users_dev
      - POSTGRES_PORT=5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data/
      - ./postgres/create.sql:/docker-entrypoint-initdb.d/create.sql
      - ./postgres/pgjwt.sql:/docker-entrypoint-initdb.d/pgjwt.sql
      # - ./postgres/extension:/usr/local/share/postgresql/extension/
    healthcheck:
      test: exit 0

  prest:
    container_name: prest
    build: ./prest
    volumes:
      - ./prest/config.toml:/srv/config.toml
      - ./prest/queries/:/srv/queries/
    environment:
        - PREST_DEBUG=false  # Enables JWT
        - PREST_CONF=/srv/config.toml
    expose:
      - "3000"
    depends_on:
      postgres:
        condition: service_healthy
    links:
      - postgres

  react:
    # react
    container_name: react
    build: ./react
    environment:
      - NODE_ENV=development
    expose:
      - "5000"

  flask:
    container_name: flask
    build: ./flask
    ports:
      - "4000:4000"
    # depends_on:
    #   prest:
    #     condition: service_started

  nginx:
    image: nginx:alpine
    container_name: nginx
    # build: ./nginx
    restart: always
    ports:
      - "1234:1234"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      prest:
        condition: service_started
      react:
        condition: service_started
    links:
      - react
      - prest
      - flask
